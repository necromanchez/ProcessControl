//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SPC_DesktopV2
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class SPI_SPCSDB_ProdEntities : DbContext
    {
        public SPI_SPCSDB_ProdEntities()
            : base("name=SPI_SPCSDB_ProdEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<C__MigrationHistory> C__MigrationHistory { get; set; }
        public DbSet<cMC> cMCS { get; set; }
        public DbSet<cMCSFG> cMCSFGs { get; set; }
        public DbSet<cMCSSP> cMCSSPs { get; set; }
        public DbSet<iInspectionDetail> iInspectionDetails { get; set; }
        public DbSet<iInspectionItem> iInspectionItems { get; set; }
        public DbSet<mCode> mCodes { get; set; }
        public DbSet<mImage> mImages { get; set; }
        public DbSet<mInspectionMethod> mInspectionMethods { get; set; }
        public DbSet<mInstrument> mInstruments { get; set; }
        public DbSet<mMailRecipient> mMailRecipients { get; set; }
        public DbSet<mMailSetting> mMailSettings { get; set; }
        public DbSet<mProcess> mProcesses { get; set; }
        public DbSet<mProduct> mProducts { get; set; }
        public DbSet<mSampling> mSamplings { get; set; }
        public DbSet<mSinglePart> mSingleParts { get; set; }
        public DbSet<mSupplier> mSuppliers { get; set; }
        public DbSet<mTerminal> mTerminals { get; set; }
        public DbSet<mUser> mUsers { get; set; }
        public DbSet<rDaily> rDailies { get; set; }
        public DbSet<rMonthly> rMonthlies { get; set; }
        public DbSet<rWeekly> rWeeklies { get; set; }
        public DbSet<rYearly> rYearlies { get; set; }
        public DbSet<sysdiagram> sysdiagrams { get; set; }
        public DbSet<tCoefficient> tCoefficients { get; set; }
        public DbSet<tSigmaTable> tSigmaTables { get; set; }
        public DbSet<xLog> xLogs { get; set; }
        public DbSet<xMCSFGLog> xMCSFGLogs { get; set; }
        public DbSet<xMCSLog> xMCSLogs { get; set; }
        public DbSet<xMCSSPLog> xMCSSPLogs { get; set; }
        public DbSet<xNCMailLog> xNCMailLogs { get; set; }
        public DbSet<InspDetailOLDDB> InspDetailOLDDBs { get; set; }
        public DbSet<InspItemOLDDB> InspItemOLDDBs { get; set; }
        public DbSet<mImageSAC> mImageSACs { get; set; }
        public DbSet<SAC_BlankData> SAC_BlankData { get; set; }
        public DbSet<SACApproval> SACApprovals { get; set; }
        public DbSet<temptable> temptables { get; set; }
        public DbSet<xNCMailTextLog> xNCMailTextLogs { get; set; }
    
        [EdmFunction("SPI_SPCSDB_ProdEntities", "fnSplitString")]
        public virtual IQueryable<fnSplitString_Result> fnSplitString(string @string, string delimiter)
        {
            var stringParameter = @string != null ?
                new ObjectParameter("string", @string) :
                new ObjectParameter("string", typeof(string));
    
            var delimiterParameter = delimiter != null ?
                new ObjectParameter("delimiter", delimiter) :
                new ObjectParameter("delimiter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fnSplitString_Result>("[SPI_SPCSDB_ProdEntities].[fnSplitString](@string, @delimiter)", stringParameter, delimiterParameter);
        }
    
        [EdmFunction("SPI_SPCSDB_ProdEntities", "GET_ToleranceViewPerInspDate")]
        public virtual IQueryable<GET_ToleranceViewPerInspDate_Result> GET_ToleranceViewPerInspDate(Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<GET_ToleranceViewPerInspDate_Result>("[SPI_SPCSDB_ProdEntities].[GET_ToleranceViewPerInspDate](@StartDate, @EndDate)", startDateParameter, endDateParameter);
        }
    
        public virtual int COMPUTE_MonthlyCpkNCCount(string typeVar, string prodCode, string partNo, string partName, string process, string checkItem, string stage, string supplier, Nullable<long> year, Nullable<int> month, ObjectParameter nCCountVal, ObjectParameter dataCountVal, ObjectParameter nCPUVal, ObjectParameter sigmaVal)
        {
            var typeVarParameter = typeVar != null ?
                new ObjectParameter("TypeVar", typeVar) :
                new ObjectParameter("TypeVar", typeof(string));
    
            var prodCodeParameter = prodCode != null ?
                new ObjectParameter("ProdCode", prodCode) :
                new ObjectParameter("ProdCode", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(long));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("COMPUTE_MonthlyCpkNCCount", typeVarParameter, prodCodeParameter, partNoParameter, partNameParameter, processParameter, checkItemParameter, stageParameter, supplierParameter, yearParameter, monthParameter, nCCountVal, dataCountVal, nCPUVal, sigmaVal);
        }
    
        public virtual int COMPUTE_RDailyCpkValue(string type, string partNo, string partName, string process, string checkItem, string stage, string supplier, string uT, string lT, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, ObjectParameter cpkVal)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var uTParameter = uT != null ?
                new ObjectParameter("UT", uT) :
                new ObjectParameter("UT", typeof(string));
    
            var lTParameter = lT != null ?
                new ObjectParameter("LT", lT) :
                new ObjectParameter("LT", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("COMPUTE_RDailyCpkValue", typeParameter, partNoParameter, partNameParameter, processParameter, checkItemParameter, stageParameter, supplierParameter, uTParameter, lTParameter, startDateParameter, endDateParameter, cpkVal);
        }
    
        public virtual int COMPUTE_RMonthlyCpkValue(string type, string productCode, string partNo, string partName, string process, string checkItem, string stage, string supplier, string uT, string lT, Nullable<long> year, Nullable<int> month, ObjectParameter cpkVal)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var uTParameter = uT != null ?
                new ObjectParameter("UT", uT) :
                new ObjectParameter("UT", typeof(string));
    
            var lTParameter = lT != null ?
                new ObjectParameter("LT", lT) :
                new ObjectParameter("LT", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(long));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("COMPUTE_RMonthlyCpkValue", typeParameter, productCodeParameter, partNoParameter, partNameParameter, processParameter, checkItemParameter, stageParameter, supplierParameter, uTParameter, lTParameter, yearParameter, monthParameter, cpkVal);
        }
    
        public virtual int COMPUTE_RWeeklyCpkValue(string type, string productCode, string partNo, string partName, string process, string checkItem, string stage, string supplier, string uT, string lT, Nullable<long> year, Nullable<int> month, Nullable<int> week, ObjectParameter cpkVal)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var uTParameter = uT != null ?
                new ObjectParameter("UT", uT) :
                new ObjectParameter("UT", typeof(string));
    
            var lTParameter = lT != null ?
                new ObjectParameter("LT", lT) :
                new ObjectParameter("LT", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(long));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var weekParameter = week.HasValue ?
                new ObjectParameter("Week", week) :
                new ObjectParameter("Week", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("COMPUTE_RWeeklyCpkValue", typeParameter, productCodeParameter, partNoParameter, partNameParameter, processParameter, checkItemParameter, stageParameter, supplierParameter, uTParameter, lTParameter, yearParameter, monthParameter, weekParameter, cpkVal);
        }
    
        public virtual int COMPUTE_RYearlyCpkValue(string type, string productCode, string partNo, string partName, string process, string checkItem, string stage, string supplier, string uT, string lT, Nullable<long> year, ObjectParameter cpkVal)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var uTParameter = uT != null ?
                new ObjectParameter("UT", uT) :
                new ObjectParameter("UT", typeof(string));
    
            var lTParameter = lT != null ?
                new ObjectParameter("LT", lT) :
                new ObjectParameter("LT", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("COMPUTE_RYearlyCpkValue", typeParameter, productCodeParameter, partNoParameter, partNameParameter, processParameter, checkItemParameter, stageParameter, supplierParameter, uTParameter, lTParameter, yearParameter, cpkVal);
        }
    
        public virtual ObjectResult<Nullable<bool>> DEL_MCS(string mCSID, string userID, string pGCode, ObjectParameter is_Deleted)
        {
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var pGCodeParameter = pGCode != null ?
                new ObjectParameter("PGCode", pGCode) :
                new ObjectParameter("PGCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("DEL_MCS", mCSIDParameter, userIDParameter, pGCodeParameter, is_Deleted);
        }
    
        public virtual ObjectResult<DEL_MCSFG_Result> DEL_MCSFG(string mCSFGID, string userID, string pGCode, ObjectParameter is_Deleted)
        {
            var mCSFGIDParameter = mCSFGID != null ?
                new ObjectParameter("MCSFGID", mCSFGID) :
                new ObjectParameter("MCSFGID", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var pGCodeParameter = pGCode != null ?
                new ObjectParameter("PGCode", pGCode) :
                new ObjectParameter("PGCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DEL_MCSFG_Result>("DEL_MCSFG", mCSFGIDParameter, userIDParameter, pGCodeParameter, is_Deleted);
        }
    
        public virtual ObjectResult<DEL_MCSSP_Result> DEL_MCSSP(string mCSSPID, string userID, string pGCode, ObjectParameter is_Deleted)
        {
            var mCSSPIDParameter = mCSSPID != null ?
                new ObjectParameter("MCSSPID", mCSSPID) :
                new ObjectParameter("MCSSPID", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var pGCodeParameter = pGCode != null ?
                new ObjectParameter("PGCode", pGCode) :
                new ObjectParameter("PGCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DEL_MCSSP_Result>("DEL_MCSSP", mCSSPIDParameter, userIDParameter, pGCodeParameter, is_Deleted);
        }
    
        public virtual int DEL_UnfinishedLot(string lot, string sapcode, string userID)
        {
            var lotParameter = lot != null ?
                new ObjectParameter("Lot", lot) :
                new ObjectParameter("Lot", typeof(string));
    
            var sapcodeParameter = sapcode != null ?
                new ObjectParameter("Sapcode", sapcode) :
                new ObjectParameter("Sapcode", typeof(string));
    
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DEL_UnfinishedLot", lotParameter, sapcodeParameter, userIDParameter);
        }
    
        public virtual int Email_NCJudgementUponSubmit()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Email_NCJudgementUponSubmit");
        }
    
        public virtual int GET_CCSDashboard(string stage, string process, string partName, string lotNo, Nullable<int> qty)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("LotNo", lotNo) :
                new ObjectParameter("LotNo", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_CCSDashboard", stageParameter, processParameter, partNameParameter, lotNoParameter, qtyParameter);
        }
    
        public virtual int GET_CCSDashboard_2016(string lotNo)
        {
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("LotNo", lotNo) :
                new ObjectParameter("LotNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_CCSDashboard_2016", lotNoParameter);
        }
    
        public virtual ObjectResult<GET_CCSIssuance_Result> GET_CCSIssuance(string iDs)
        {
            var iDsParameter = iDs != null ?
                new ObjectParameter("IDs", iDs) :
                new ObjectParameter("IDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_CCSIssuance_Result>("GET_CCSIssuance", iDsParameter);
        }
    
        public virtual ObjectResult<string> GET_checkitemFiltered(string stage, string process, string partNo, string partName, string product, string month, string year)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_checkitemFiltered", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, monthParameter, yearParameter);
        }
    
        public virtual int GET_Codes(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_Codes", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual ObjectResult<string> GET_CodesByType(string type)
        {
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_CodesByType", typeParameter);
        }
    
        public virtual ObjectResult<GET_DailyQualityChartReport_Result> GET_DailyQualityChartReport(string stage, string partNo, string partName, string supplier, string product, string period, string lotNo, string drillDownCondition)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("lotNo", lotNo) :
                new ObjectParameter("lotNo", typeof(string));
    
            var drillDownConditionParameter = drillDownCondition != null ?
                new ObjectParameter("drillDownCondition", drillDownCondition) :
                new ObjectParameter("drillDownCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_DailyQualityChartReport_Result>("GET_DailyQualityChartReport", stageParameter, partNoParameter, partNameParameter, supplierParameter, productParameter, periodParameter, lotNoParameter, drillDownConditionParameter);
        }
    
        public virtual int GET_DailyQualityChartReportCompressed(string stage, string partNo, string partName, string supplier, string product, string period, string lotNo, string drillDownCondition)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("lotNo", lotNo) :
                new ObjectParameter("lotNo", typeof(string));
    
            var drillDownConditionParameter = drillDownCondition != null ?
                new ObjectParameter("drillDownCondition", drillDownCondition) :
                new ObjectParameter("drillDownCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_DailyQualityChartReportCompressed", stageParameter, partNoParameter, partNameParameter, supplierParameter, productParameter, periodParameter, lotNoParameter, drillDownConditionParameter);
        }
    
        public virtual ObjectResult<GET_DailyQualityReport_Result> GET_DailyQualityReport(string stage, string partNo, string partName, string supplier, string product, string period, string lotNo)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("lotNo", lotNo) :
                new ObjectParameter("lotNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_DailyQualityReport_Result>("GET_DailyQualityReport", stageParameter, partNoParameter, partNameParameter, supplierParameter, productParameter, periodParameter, lotNoParameter);
        }
    
        public virtual ObjectResult<GET_DailyQualityTableReport_Result> GET_DailyQualityTableReport(string stage, string partNo, string partName, string supplier, string product, string period, string lotNo, string drillDownCondition)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("lotNo", lotNo) :
                new ObjectParameter("lotNo", typeof(string));
    
            var drillDownConditionParameter = drillDownCondition != null ?
                new ObjectParameter("drillDownCondition", drillDownCondition) :
                new ObjectParameter("drillDownCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_DailyQualityTableReport_Result>("GET_DailyQualityTableReport", stageParameter, partNoParameter, partNameParameter, supplierParameter, productParameter, periodParameter, lotNoParameter, drillDownConditionParameter);
        }
    
        public virtual ObjectResult<GET_DailyQualityTableReportCompressed_Result> GET_DailyQualityTableReportCompressed(string stage, string partNo, string partName, string supplier, string product, string period, string lotNo, string drillDownCondition)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("period", period) :
                new ObjectParameter("period", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("lotNo", lotNo) :
                new ObjectParameter("lotNo", typeof(string));
    
            var drillDownConditionParameter = drillDownCondition != null ?
                new ObjectParameter("drillDownCondition", drillDownCondition) :
                new ObjectParameter("drillDownCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_DailyQualityTableReportCompressed_Result>("GET_DailyQualityTableReportCompressed", stageParameter, partNoParameter, partNameParameter, supplierParameter, productParameter, periodParameter, lotNoParameter, drillDownConditionParameter);
        }
    
        public virtual int GET_DailyReportChart_2016(string stage, string process, string partNo, string partName, string product, string supplier, string lotNo, string month, string year, string result)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("LotNo", lotNo) :
                new ObjectParameter("LotNo", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_DailyReportChart_2016", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, lotNoParameter, monthParameter, yearParameter, resultParameter);
        }
    
        public virtual int GET_DailyReportChart_Original(string stage, string process, string partNo, string partName, string product, string supplier, string month, string year, string result)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_DailyReportChart_Original", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthParameter, yearParameter, resultParameter);
        }
    
        public virtual int GET_DailyReportCharts(string stage, string process, string partNo, string partName, string product, string supplier, string month, string year, string result)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_DailyReportCharts", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthParameter, yearParameter, resultParameter);
        }
    
        public virtual int GET_DailyReportTable_2016(string stage, string process, string partNo, string partName, string product, string supplier, string lotNo, string month, string year, string result)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("LotNo", lotNo) :
                new ObjectParameter("LotNo", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_DailyReportTable_2016", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, lotNoParameter, monthParameter, yearParameter, resultParameter);
        }
    
        public virtual int GET_DailyReportTable_Original(string stage, string process, string partNo, string partName, string product, string supplier, string month, string year, string result)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_DailyReportTable_Original", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthParameter, yearParameter, resultParameter);
        }
    
        public virtual int GET_DailyReportTables(string stage, string process, string partNo, string partName, string product, string supplier, string month, string year, string result)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_DailyReportTables", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthParameter, yearParameter, resultParameter);
        }
    
        public virtual ObjectResult<GET_FGDATAROW_Result> GET_FGDATAROW(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_FGDATAROW_Result>("GET_FGDATAROW", iDParameter);
        }
    
        public virtual ObjectResult<GET_FinishGoodNoPaginationByMCSID_Result> GET_FinishGoodNoPaginationByMCSID(string mCSID)
        {
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_FinishGoodNoPaginationByMCSID_Result>("GET_FinishGoodNoPaginationByMCSID", mCSIDParameter);
        }
    
        public virtual int GET_GraphLimitValues(string stage, string process, string partNo, string partName, string product, string startDate, string endDate, string checkItem, string checkItemNo)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var checkItemNoParameter = checkItemNo != null ?
                new ObjectParameter("CheckItemNo", checkItemNo) :
                new ObjectParameter("CheckItemNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_GraphLimitValues", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, startDateParameter, endDateParameter, checkItemParameter, checkItemNoParameter);
        }
    
        public virtual int GET_InspectionMethods(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_InspectionMethods", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual int GET_Instruments(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_Instruments", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual int GET_IPCChart(string stage, string process, string partNo, string year)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_IPCChart", stageParameter, processParameter, partNoParameter, yearParameter);
        }
    
        public virtual int GET_IPCChart_2016(string process, string partNo, string year, ObjectParameter lotCount)
        {
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_IPCChart_2016", processParameter, partNoParameter, yearParameter, lotCount);
        }
    
        public virtual int GET_IPCChart2_2016(string process, string partNo, string year, ObjectParameter lotCount)
        {
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_IPCChart2_2016", processParameter, partNoParameter, yearParameter, lotCount);
        }
    
        public virtual int GET_IPCChart3_2016(string process, string partNo, string year, ObjectParameter lotCount)
        {
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_IPCChart3_2016", processParameter, partNoParameter, yearParameter, lotCount);
        }
    
        public virtual ObjectResult<GET_IPCTable_Result> GET_IPCTable(string stage, string process, string partNo, string year)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_IPCTable_Result>("GET_IPCTable", stageParameter, processParameter, partNoParameter, yearParameter);
        }
    
        public virtual int GET_IPCTable_2016(string process, string partNo, string year, ObjectParameter lotCount)
        {
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_IPCTable_2016", processParameter, partNoParameter, yearParameter, lotCount);
        }
    
        public virtual int GET_IPCTable3_2016(string process, string partNo, string year)
        {
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_IPCTable3_2016", processParameter, partNoParameter, yearParameter);
        }
    
        public virtual ObjectResult<GET_IPCTableDetailed_Result> GET_IPCTableDetailed(string stage, string process, string partNo, string year, string data)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var dataParameter = data != null ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_IPCTableDetailed_Result>("GET_IPCTableDetailed", stageParameter, processParameter, partNoParameter, yearParameter, dataParameter);
        }
    
        public virtual int GET_IPCTableDetailed_2016(string process, string partNo, string year, string data)
        {
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var dataParameter = data != null ?
                new ObjectParameter("Data", data) :
                new ObjectParameter("Data", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_IPCTableDetailed_2016", processParameter, partNoParameter, yearParameter, dataParameter);
        }
    
        public virtual ObjectResult<string> GET_LotNoFiltered(string process, string partNo, string partName, string product, string supplier)
        {
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_LotNoFiltered", processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter);
        }
    
        public virtual ObjectResult<string> GET_LotNos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_LotNos");
        }
    
        public virtual int GET_MailRecipients(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MailRecipients", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual ObjectResult<GET_MailSetting_Result> GET_MailSetting(string mailSettingID)
        {
            var mailSettingIDParameter = mailSettingID != null ?
                new ObjectParameter("MailSettingID", mailSettingID) :
                new ObjectParameter("MailSettingID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_MailSetting_Result>("GET_MailSetting", mailSettingIDParameter);
        }
    
        public virtual ObjectResult<GET_MailSettingDetails_Result> GET_MailSettingDetails()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_MailSettingDetails_Result>("GET_MailSettingDetails");
        }
    
        public virtual ObjectResult<Nullable<int>> GET_MailSettingID()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GET_MailSettingID");
        }
    
        public virtual int GET_MCS(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MCS", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual int GET_MCS_deleted(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MCS_deleted", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual int GET_MCSApproval(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MCSApproval", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual int GET_MCSApproved(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MCSApproved", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual int GET_MCSFG_BY_MCSID(string pageNumber, string rowCount, string orderBy, string filter, string mCSID, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MCSFG_BY_MCSID", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, mCSIDParameter, recordCount);
        }
    
        public virtual int GET_MCSFGLOGS(string pageNumber, string rowCount, string orderBy, string iD, string tYPE, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MCSFGLOGS", pageNumberParameter, rowCountParameter, orderByParameter, iDParameter, tYPEParameter, recordCount);
        }
    
        public virtual int GET_MCSFGLOGSDetails(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MCSFGLOGSDetails", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual ObjectResult<string> GET_MCSFGMailID(string iD, string mCSID, string mCSFGID)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            var mCSFGIDParameter = mCSFGID != null ?
                new ObjectParameter("MCSFGID", mCSFGID) :
                new ObjectParameter("MCSFGID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_MCSFGMailID", iDParameter, mCSIDParameter, mCSFGIDParameter);
        }
    
        public virtual ObjectResult<string> GET_MCSMailID(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_MCSMailID", iDParameter);
        }
    
        public virtual ObjectResult<GET_MCSP_Result> GET_MCSP()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_MCSP_Result>("GET_MCSP");
        }
    
        public virtual ObjectResult<GET_MCSPDETAILSREVISIONS_Result> GET_MCSPDETAILSREVISIONS(string iD, string tYPE)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_MCSPDETAILSREVISIONS_Result>("GET_MCSPDETAILSREVISIONS", iDParameter, tYPEParameter);
        }
    
        public virtual int GET_MCSRejected(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MCSRejected", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual int GET_MCSSP_BY_MCSID(string pageNumber, string rowCount, string orderBy, string filter, string mCSID, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MCSSP_BY_MCSID", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, mCSIDParameter, recordCount);
        }
    
        public virtual int GET_MCSSPLOGS(string pageNumber, string rowCount, string orderBy, string iD, string tYPE, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var tYPEParameter = tYPE != null ?
                new ObjectParameter("TYPE", tYPE) :
                new ObjectParameter("TYPE", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MCSSPLOGS", pageNumberParameter, rowCountParameter, orderByParameter, iDParameter, tYPEParameter, recordCount);
        }
    
        public virtual int GET_MCSSPLogsDetails(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MCSSPLogsDetails", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual ObjectResult<string> GET_MCSSPMailID(string iD, string mCSID, string mCSSPID)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            var mCSSPIDParameter = mCSSPID != null ?
                new ObjectParameter("MCSSPID", mCSSPID) :
                new ObjectParameter("MCSSPID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_MCSSPMailID", iDParameter, mCSIDParameter, mCSSPIDParameter);
        }
    
        public virtual ObjectResult<string> GET_ModelByProcess(string process)
        {
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_ModelByProcess", processParameter);
        }
    
        public virtual ObjectResult<string> Get_Models()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Get_Models");
        }
    
        public virtual int GET_MonthlyCPChart(string stage, string process, string partNo, string partName, string product, string supplier, string monthFrom, string yearFrom, string monthTo, string yearTo)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthFromParameter = monthFrom != null ?
                new ObjectParameter("MonthFrom", monthFrom) :
                new ObjectParameter("MonthFrom", typeof(string));
    
            var yearFromParameter = yearFrom != null ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(string));
    
            var monthToParameter = monthTo != null ?
                new ObjectParameter("MonthTo", monthTo) :
                new ObjectParameter("MonthTo", typeof(string));
    
            var yearToParameter = yearTo != null ?
                new ObjectParameter("YearTo", yearTo) :
                new ObjectParameter("YearTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyCPChart", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthFromParameter, yearFromParameter, monthToParameter, yearToParameter);
        }
    
        public virtual int GET_MonthlyCPKChart(string stage, string process, string partNo, string partName, string product, string supplier, string monthFrom, string yearFrom, string monthTo, string yearTo)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthFromParameter = monthFrom != null ?
                new ObjectParameter("MonthFrom", monthFrom) :
                new ObjectParameter("MonthFrom", typeof(string));
    
            var yearFromParameter = yearFrom != null ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(string));
    
            var monthToParameter = monthTo != null ?
                new ObjectParameter("MonthTo", monthTo) :
                new ObjectParameter("MonthTo", typeof(string));
    
            var yearToParameter = yearTo != null ?
                new ObjectParameter("YearTo", yearTo) :
                new ObjectParameter("YearTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyCPKChart", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthFromParameter, yearFromParameter, monthToParameter, yearToParameter);
        }
    
        public virtual int GET_MonthlyCPKChart2(string stage, string process, string partNo, string partName, string product, string supplier, string monthFrom, string yearFrom, string monthTo, string yearTo)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthFromParameter = monthFrom != null ?
                new ObjectParameter("MonthFrom", monthFrom) :
                new ObjectParameter("MonthFrom", typeof(string));
    
            var yearFromParameter = yearFrom != null ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(string));
    
            var monthToParameter = monthTo != null ?
                new ObjectParameter("MonthTo", monthTo) :
                new ObjectParameter("MonthTo", typeof(string));
    
            var yearToParameter = yearTo != null ?
                new ObjectParameter("YearTo", yearTo) :
                new ObjectParameter("YearTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyCPKChart2", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthFromParameter, yearFromParameter, monthToParameter, yearToParameter);
        }
    
        public virtual int GET_MonthlyCPKChart3(string stage, string process, string partNo, string partName, string product, string supplier, string monthFrom, string yearFrom, string monthTo, string yearTo)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthFromParameter = monthFrom != null ?
                new ObjectParameter("MonthFrom", monthFrom) :
                new ObjectParameter("MonthFrom", typeof(string));
    
            var yearFromParameter = yearFrom != null ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(string));
    
            var monthToParameter = monthTo != null ?
                new ObjectParameter("MonthTo", monthTo) :
                new ObjectParameter("MonthTo", typeof(string));
    
            var yearToParameter = yearTo != null ?
                new ObjectParameter("YearTo", yearTo) :
                new ObjectParameter("YearTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyCPKChart3", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthFromParameter, yearFromParameter, monthToParameter, yearToParameter);
        }
    
        public virtual int GET_MonthlyCPKTable(string stage, string process, string partNo, string partName, string product, string supplier, string monthFrom, string yearFrom, string monthTo, string yearTo)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthFromParameter = monthFrom != null ?
                new ObjectParameter("MonthFrom", monthFrom) :
                new ObjectParameter("MonthFrom", typeof(string));
    
            var yearFromParameter = yearFrom != null ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(string));
    
            var monthToParameter = monthTo != null ?
                new ObjectParameter("MonthTo", monthTo) :
                new ObjectParameter("MonthTo", typeof(string));
    
            var yearToParameter = yearTo != null ?
                new ObjectParameter("YearTo", yearTo) :
                new ObjectParameter("YearTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyCPKTable", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthFromParameter, yearFromParameter, monthToParameter, yearToParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GET_MonthlyCPKTable_2016(string stage, string process, string partNo, string partName, string product, string supplier, string monthFrom, string yearFrom, string monthTo, string yearTo, ObjectParameter lotCount)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthFromParameter = monthFrom != null ?
                new ObjectParameter("MonthFrom", monthFrom) :
                new ObjectParameter("MonthFrom", typeof(string));
    
            var yearFromParameter = yearFrom != null ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(string));
    
            var monthToParameter = monthTo != null ?
                new ObjectParameter("MonthTo", monthTo) :
                new ObjectParameter("MonthTo", typeof(string));
    
            var yearToParameter = yearTo != null ?
                new ObjectParameter("YearTo", yearTo) :
                new ObjectParameter("YearTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GET_MonthlyCPKTable_2016", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthFromParameter, yearFromParameter, monthToParameter, yearToParameter, lotCount);
        }
    
        public virtual int GET_MonthlyCPKTable_OLD(string stage, string process, string partNo, string partName, string product, string supplier, string monthFrom, string yearFrom, string monthTo, string yearTo)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthFromParameter = monthFrom != null ?
                new ObjectParameter("MonthFrom", monthFrom) :
                new ObjectParameter("MonthFrom", typeof(string));
    
            var yearFromParameter = yearFrom != null ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(string));
    
            var monthToParameter = monthTo != null ?
                new ObjectParameter("MonthTo", monthTo) :
                new ObjectParameter("MonthTo", typeof(string));
    
            var yearToParameter = yearTo != null ?
                new ObjectParameter("YearTo", yearTo) :
                new ObjectParameter("YearTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyCPKTable_OLD", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthFromParameter, yearFromParameter, monthToParameter, yearToParameter);
        }
    
        public virtual int GET_MonthlyCPKTable2_2016(string stage, string process, string partNo, string partName, string product, string supplier, string monthFrom, string yearFrom, string monthTo, string yearTo)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthFromParameter = monthFrom != null ?
                new ObjectParameter("MonthFrom", monthFrom) :
                new ObjectParameter("MonthFrom", typeof(string));
    
            var yearFromParameter = yearFrom != null ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(string));
    
            var monthToParameter = monthTo != null ?
                new ObjectParameter("MonthTo", monthTo) :
                new ObjectParameter("MonthTo", typeof(string));
    
            var yearToParameter = yearTo != null ?
                new ObjectParameter("YearTo", yearTo) :
                new ObjectParameter("YearTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyCPKTable2_2016", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthFromParameter, yearFromParameter, monthToParameter, yearToParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GET_MonthlyCPTable(string stage, string process, string partNo, string partName, string product, string supplier, string monthFrom, string yearFrom, string monthTo, string yearTo, ObjectParameter lotCount)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var monthFromParameter = monthFrom != null ?
                new ObjectParameter("MonthFrom", monthFrom) :
                new ObjectParameter("MonthFrom", typeof(string));
    
            var yearFromParameter = yearFrom != null ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(string));
    
            var monthToParameter = monthTo != null ?
                new ObjectParameter("MonthTo", monthTo) :
                new ObjectParameter("MonthTo", typeof(string));
    
            var yearToParameter = yearTo != null ?
                new ObjectParameter("YearTo", yearTo) :
                new ObjectParameter("YearTo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GET_MonthlyCPTable", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, monthFromParameter, yearFromParameter, monthToParameter, yearToParameter, lotCount);
        }
    
        public virtual int GET_MonthlyQualityChartReport(string stage, string partNo, string partName, string supplier, string product, Nullable<int> periodFrom, Nullable<int> periodTo, string year, string lotNo, string drillDownCondition)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var periodFromParameter = periodFrom.HasValue ?
                new ObjectParameter("periodFrom", periodFrom) :
                new ObjectParameter("periodFrom", typeof(int));
    
            var periodToParameter = periodTo.HasValue ?
                new ObjectParameter("periodTo", periodTo) :
                new ObjectParameter("periodTo", typeof(int));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("lotNo", lotNo) :
                new ObjectParameter("lotNo", typeof(string));
    
            var drillDownConditionParameter = drillDownCondition != null ?
                new ObjectParameter("drillDownCondition", drillDownCondition) :
                new ObjectParameter("drillDownCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyQualityChartReport", stageParameter, partNoParameter, partNameParameter, supplierParameter, productParameter, periodFromParameter, periodToParameter, yearParameter, lotNoParameter, drillDownConditionParameter);
        }
    
        public virtual ObjectResult<GET_MonthlyQualityTableReport_Result> GET_MonthlyQualityTableReport(string stage, string partNo, string partName, string supplier, string product, string periodFrom, string periodTo, string year, string lotNo, string drillDownCondition)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("periodFrom", periodFrom) :
                new ObjectParameter("periodFrom", typeof(string));
    
            var periodToParameter = periodTo != null ?
                new ObjectParameter("periodTo", periodTo) :
                new ObjectParameter("periodTo", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("lotNo", lotNo) :
                new ObjectParameter("lotNo", typeof(string));
    
            var drillDownConditionParameter = drillDownCondition != null ?
                new ObjectParameter("drillDownCondition", drillDownCondition) :
                new ObjectParameter("drillDownCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_MonthlyQualityTableReport_Result>("GET_MonthlyQualityTableReport", stageParameter, partNoParameter, partNameParameter, supplierParameter, productParameter, periodFromParameter, periodToParameter, yearParameter, lotNoParameter, drillDownConditionParameter);
        }
    
        public virtual ObjectResult<GET_MonthlyQualityTableReportCompressed_Result> GET_MonthlyQualityTableReportCompressed(string stage, string partNo, string partName, string supplier, string product, string periodFrom, string periodTo, string year, string lotNo, string drillDownCondition)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var periodFromParameter = periodFrom != null ?
                new ObjectParameter("periodFrom", periodFrom) :
                new ObjectParameter("periodFrom", typeof(string));
    
            var periodToParameter = periodTo != null ?
                new ObjectParameter("periodTo", periodTo) :
                new ObjectParameter("periodTo", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("lotNo", lotNo) :
                new ObjectParameter("lotNo", typeof(string));
    
            var drillDownConditionParameter = drillDownCondition != null ?
                new ObjectParameter("drillDownCondition", drillDownCondition) :
                new ObjectParameter("drillDownCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_MonthlyQualityTableReportCompressed_Result>("GET_MonthlyQualityTableReportCompressed", stageParameter, partNoParameter, partNameParameter, supplierParameter, productParameter, periodFromParameter, periodToParameter, yearParameter, lotNoParameter, drillDownConditionParameter);
        }
    
        public virtual int GET_MonthlyReportChart(string stage, string process, string partNo, string partName, string product, string supplier, string period, string year, string result)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyReportChart", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, periodParameter, yearParameter, resultParameter);
        }
    
        public virtual int GET_MonthlyReportChart_2016(string stage, string process, string partNo, string partName, string product, string supplier, string lotNo, string period, string year, string result)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("LotNo", lotNo) :
                new ObjectParameter("LotNo", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyReportChart_2016", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, lotNoParameter, periodParameter, yearParameter, resultParameter);
        }
    
        public virtual int GET_MonthlyReportChart_Original(string stage, string process, string partNo, string partName, string product, string supplier, string period, string year, string result)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyReportChart_Original", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, periodParameter, yearParameter, resultParameter);
        }
    
        public virtual int GET_MonthlyReportTable(string stage, string process, string partNo, string partName, string product, string supplier, string period, string year, string result)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyReportTable", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, periodParameter, yearParameter, resultParameter);
        }
    
        public virtual int GET_MonthlyReportTable_2016(string stage, string process, string partNo, string partName, string product, string supplier, string lotNo, string period, string year, string result)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("LotNo", lotNo) :
                new ObjectParameter("LotNo", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyReportTable_2016", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, lotNoParameter, periodParameter, yearParameter, resultParameter);
        }
    
        public virtual int GET_MonthlyReportTable_Original(string stage, string process, string partNo, string partName, string product, string supplier, string period, string year, string result)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("Supplier", supplier) :
                new ObjectParameter("Supplier", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var resultParameter = result != null ?
                new ObjectParameter("Result", result) :
                new ObjectParameter("Result", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlyReportTable_Original", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, supplierParameter, periodParameter, yearParameter, resultParameter);
        }
    
        public virtual int GET_MonthlySAC()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlySAC");
        }
    
        public virtual int GET_MonthlySACcategory(string category)
        {
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlySACcategory", categoryParameter);
        }
    
        public virtual int GET_MonthlySummaryCpkTableReport(string stage, string products, string partNo, string partName, string process, string supplier, string month, string year, string month2, string year2)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var productsParameter = products != null ?
                new ObjectParameter("products", products) :
                new ObjectParameter("products", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("process", process) :
                new ObjectParameter("process", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var month2Parameter = month2 != null ?
                new ObjectParameter("month2", month2) :
                new ObjectParameter("month2", typeof(string));
    
            var year2Parameter = year2 != null ?
                new ObjectParameter("year2", year2) :
                new ObjectParameter("year2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlySummaryCpkTableReport", stageParameter, productsParameter, partNoParameter, partNameParameter, processParameter, supplierParameter, monthParameter, yearParameter, month2Parameter, year2Parameter);
        }
    
        public virtual int GET_MonthlySummaryCpkTableReport2(string stage, string products, string partNo, string partName, string process, string supplier, string month, string year, string month2, string year2)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var productsParameter = products != null ?
                new ObjectParameter("products", products) :
                new ObjectParameter("products", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("process", process) :
                new ObjectParameter("process", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var month2Parameter = month2 != null ?
                new ObjectParameter("month2", month2) :
                new ObjectParameter("month2", typeof(string));
    
            var year2Parameter = year2 != null ?
                new ObjectParameter("year2", year2) :
                new ObjectParameter("year2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlySummaryCpkTableReport2", stageParameter, productsParameter, partNoParameter, partNameParameter, processParameter, supplierParameter, monthParameter, yearParameter, month2Parameter, year2Parameter);
        }
    
        public virtual int GET_MonthlySummaryCpTableReport(string stage, string products, string partNo, string partName, string process, string supplier, string month, string year, string month2, string year2)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var productsParameter = products != null ?
                new ObjectParameter("products", products) :
                new ObjectParameter("products", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("process", process) :
                new ObjectParameter("process", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var month2Parameter = month2 != null ?
                new ObjectParameter("month2", month2) :
                new ObjectParameter("month2", typeof(string));
    
            var year2Parameter = year2 != null ?
                new ObjectParameter("year2", year2) :
                new ObjectParameter("year2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlySummaryCpTableReport", stageParameter, productsParameter, partNoParameter, partNameParameter, processParameter, supplierParameter, monthParameter, yearParameter, month2Parameter, year2Parameter);
        }
    
        public virtual int GET_MonthlySummaryCpTableReport2(string stage, string products, string partNo, string partName, string process, string supplier, string month, string year, string month2, string year2)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var productsParameter = products != null ?
                new ObjectParameter("products", products) :
                new ObjectParameter("products", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("process", process) :
                new ObjectParameter("process", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var monthParameter = month != null ?
                new ObjectParameter("month", month) :
                new ObjectParameter("month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(string));
    
            var month2Parameter = month2 != null ?
                new ObjectParameter("month2", month2) :
                new ObjectParameter("month2", typeof(string));
    
            var year2Parameter = year2 != null ?
                new ObjectParameter("year2", year2) :
                new ObjectParameter("year2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_MonthlySummaryCpTableReport2", stageParameter, productsParameter, partNoParameter, partNameParameter, processParameter, supplierParameter, monthParameter, yearParameter, month2Parameter, year2Parameter);
        }
    
        public virtual ObjectResult<GET_NCLotNo_Result> GET_NCLotNo(string lotNumber, string sapCode)
        {
            var lotNumberParameter = lotNumber != null ?
                new ObjectParameter("LotNumber", lotNumber) :
                new ObjectParameter("LotNumber", typeof(string));
    
            var sapCodeParameter = sapCode != null ?
                new ObjectParameter("SapCode", sapCode) :
                new ObjectParameter("SapCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_NCLotNo_Result>("GET_NCLotNo", lotNumberParameter, sapCodeParameter);
        }
    
        public virtual ObjectResult<string> GET_PartNameByProcessModel(string process, string partNo)
        {
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_PartNameByProcessModel", processParameter, partNoParameter);
        }
    
        public virtual ObjectResult<string> GET_PartNames()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_PartNames");
        }
    
        public virtual int GET_Processes(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_Processes", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual ObjectResult<string> GET_ProcessesCode()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_ProcessesCode");
        }
    
        public virtual ObjectResult<string> GET_ProcessesFilter()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_ProcessesFilter");
        }
    
        public virtual ObjectResult<string> GET_ProductByProcessModelPartName(string process, string partNo, string partName)
        {
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_ProductByProcessModelPartName", processParameter, partNoParameter, partNameParameter);
        }
    
        public virtual ObjectResult<string> GET_ProductCodes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_ProductCodes");
        }
    
        public virtual int GET_Products(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_Products", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual int GET_RawData(string stage, string process, string partNo, string partName, string product, string checkitem, string monthFrom, string yearFrom, string pageNumber, string rowCount, string orderBy, ObjectParameter recordCount)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var checkitemParameter = checkitem != null ?
                new ObjectParameter("Checkitem", checkitem) :
                new ObjectParameter("Checkitem", typeof(string));
    
            var monthFromParameter = monthFrom != null ?
                new ObjectParameter("MonthFrom", monthFrom) :
                new ObjectParameter("MonthFrom", typeof(string));
    
            var yearFromParameter = yearFrom != null ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(string));
    
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_RawData", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, checkitemParameter, monthFromParameter, yearFromParameter, pageNumberParameter, rowCountParameter, orderByParameter, recordCount);
        }
    
        public virtual int GET_RawDataHeaderFilters(string stage, string process, string partNo, string partName, string product, string checkitem, string monthFrom, string yearFrom, string pageNumber, string rowCount, string orderBy, Nullable<int> headerCol, ObjectParameter recordCount)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var checkitemParameter = checkitem != null ?
                new ObjectParameter("Checkitem", checkitem) :
                new ObjectParameter("Checkitem", typeof(string));
    
            var monthFromParameter = monthFrom != null ?
                new ObjectParameter("MonthFrom", monthFrom) :
                new ObjectParameter("MonthFrom", typeof(string));
    
            var yearFromParameter = yearFrom != null ?
                new ObjectParameter("YearFrom", yearFrom) :
                new ObjectParameter("YearFrom", typeof(string));
    
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var headerColParameter = headerCol.HasValue ?
                new ObjectParameter("HeaderCol", headerCol) :
                new ObjectParameter("HeaderCol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_RawDataHeaderFilters", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, checkitemParameter, monthFromParameter, yearFromParameter, pageNumberParameter, rowCountParameter, orderByParameter, headerColParameter, recordCount);
        }
    
        public virtual int GET_RawDataSP(string month, string year, string dayfrom, string dayto)
        {
            var monthParameter = month != null ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(string));
    
            var yearParameter = year != null ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(string));
    
            var dayfromParameter = dayfrom != null ?
                new ObjectParameter("Dayfrom", dayfrom) :
                new ObjectParameter("Dayfrom", typeof(string));
    
            var daytoParameter = dayto != null ?
                new ObjectParameter("Dayto", dayto) :
                new ObjectParameter("Dayto", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_RawDataSP", monthParameter, yearParameter, dayfromParameter, daytoParameter);
        }
    
        public virtual int GET_SAC(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SAC", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual ObjectResult<GET_SACCheckitemviaSapcode_Result> GET_SACCheckitemviaSapcode(string sapcode, string type)
        {
            var sapcodeParameter = sapcode != null ?
                new ObjectParameter("Sapcode", sapcode) :
                new ObjectParameter("Sapcode", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SACCheckitemviaSapcode_Result>("GET_SACCheckitemviaSapcode", sapcodeParameter, typeParameter);
        }
    
        public virtual ObjectResult<GET_SACEmailFG_Result> GET_SACEmailFG(string inspectionID, string mCSID, string mCSChildID, string product, string process, string partName)
        {
            var inspectionIDParameter = inspectionID != null ?
                new ObjectParameter("InspectionID", inspectionID) :
                new ObjectParameter("InspectionID", typeof(string));
    
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            var mCSChildIDParameter = mCSChildID != null ?
                new ObjectParameter("MCSChildID", mCSChildID) :
                new ObjectParameter("MCSChildID", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SACEmailFG_Result>("GET_SACEmailFG", inspectionIDParameter, mCSIDParameter, mCSChildIDParameter, productParameter, processParameter, partNameParameter);
        }
    
        public virtual ObjectResult<GET_SACEmailSP_Result> GET_SACEmailSP(string inspectionID, string mCSID, string mCSChildID, string product, string process, string partName)
        {
            var inspectionIDParameter = inspectionID != null ?
                new ObjectParameter("InspectionID", inspectionID) :
                new ObjectParameter("InspectionID", typeof(string));
    
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            var mCSChildIDParameter = mCSChildID != null ?
                new ObjectParameter("MCSChildID", mCSChildID) :
                new ObjectParameter("MCSChildID", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SACEmailSP_Result>("GET_SACEmailSP", inspectionIDParameter, mCSIDParameter, mCSChildIDParameter, productParameter, processParameter, partNameParameter);
        }
    
        public virtual int GET_SACFilter(string pageNumber, string rowCount, string orderBy, string filter, Nullable<int> headerCol)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var headerColParameter = headerCol.HasValue ?
                new ObjectParameter("HeaderCol", headerCol) :
                new ObjectParameter("HeaderCol", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SACFilter", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, headerColParameter);
        }
    
        public virtual ObjectResult<string> GET_SACImage(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_SACImage", nameParameter);
        }
    
        public virtual ObjectResult<GET_SACImageAll_Result> GET_SACImageAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SACImageAll_Result>("GET_SACImageAll");
        }
    
        public virtual int GET_SACLotMasterList(Nullable<int> pageNumber, Nullable<int> rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var rowCountParameter = rowCount.HasValue ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(int));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SACLotMasterList", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual ObjectResult<string> GET_SACMCSID(string sapCode, string lotNo)
        {
            var sapCodeParameter = sapCode != null ?
                new ObjectParameter("SapCode", sapCode) :
                new ObjectParameter("SapCode", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("LotNo", lotNo) :
                new ObjectParameter("LotNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_SACMCSID", sapCodeParameter, lotNoParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GET_SACQty(string sapCode, string lotNo, string mCSChildID)
        {
            var sapCodeParameter = sapCode != null ?
                new ObjectParameter("SapCode", sapCode) :
                new ObjectParameter("SapCode", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("LotNo", lotNo) :
                new ObjectParameter("LotNo", typeof(string));
    
            var mCSChildIDParameter = mCSChildID != null ?
                new ObjectParameter("MCSChildID", mCSChildID) :
                new ObjectParameter("MCSChildID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GET_SACQty", sapCodeParameter, lotNoParameter, mCSChildIDParameter);
        }
    
        public virtual int GET_SACRelated(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SACRelated", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual ObjectResult<GET_SACviaRefno_Result> GET_SACviaRefno(string refNo)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SACviaRefno_Result>("GET_SACviaRefno", refNoParameter);
        }
    
        public virtual int GET_SACViewListSp(string pageNumber, string rowCount, string orderBy, string filter)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SACViewListSp", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter);
        }
    
        public virtual int GET_Samplings(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_Samplings", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual int GET_SingleParts(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SingleParts", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual ObjectResult<GET_SinglePartsNoPaginationByMCSID_Result> GET_SinglePartsNoPaginationByMCSID(string mCSID)
        {
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SinglePartsNoPaginationByMCSID_Result>("GET_SinglePartsNoPaginationByMCSID", mCSIDParameter);
        }
    
        public virtual ObjectResult<GET_SPCByLocalID_Result> GET_SPCByLocalID(string localID, Nullable<System.DateTime> fromValue, Nullable<System.DateTime> toValue)
        {
            var localIDParameter = localID != null ?
                new ObjectParameter("localID", localID) :
                new ObjectParameter("localID", typeof(string));
    
            var fromValueParameter = fromValue.HasValue ?
                new ObjectParameter("fromValue", fromValue) :
                new ObjectParameter("fromValue", typeof(System.DateTime));
    
            var toValueParameter = toValue.HasValue ?
                new ObjectParameter("toValue", toValue) :
                new ObjectParameter("toValue", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SPCByLocalID_Result>("GET_SPCByLocalID", localIDParameter, fromValueParameter, toValueParameter);
        }
    
        public virtual int GET_SPCChart(string stage, string process, string partNo, string partName, string product, string startDate, string endDate, string checkItem)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCChart", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, startDateParameter, endDateParameter, checkItemParameter);
        }
    
        public virtual int GET_SPCchartReport1(string checkitem, string stage, string product, string partNo, string partName, string process, string startDate, string endDate)
        {
            var checkitemParameter = checkitem != null ?
                new ObjectParameter("checkitem", checkitem) :
                new ObjectParameter("checkitem", typeof(string));
    
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("process", process) :
                new ObjectParameter("process", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCchartReport1", checkitemParameter, stageParameter, productParameter, partNoParameter, partNameParameter, processParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GET_SPCchartReport2(string checkitem, string stage, string product, string partNo, string partName, string process, string startDate, string endDate)
        {
            var checkitemParameter = checkitem != null ?
                new ObjectParameter("checkitem", checkitem) :
                new ObjectParameter("checkitem", typeof(string));
    
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("process", process) :
                new ObjectParameter("process", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCchartReport2", checkitemParameter, stageParameter, productParameter, partNoParameter, partNameParameter, processParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GET_SPCchartReport3(string checkitem, string stage, string product, string partNo, string partName, string process, string startDate, string endDate)
        {
            var checkitemParameter = checkitem != null ?
                new ObjectParameter("checkitem", checkitem) :
                new ObjectParameter("checkitem", typeof(string));
    
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("process", process) :
                new ObjectParameter("process", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCchartReport3", checkitemParameter, stageParameter, productParameter, partNoParameter, partNameParameter, processParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GET_SPCchartReport4(string checkitem, string stage, string product, string partNo, string partName, string process, string startDate, string endDate)
        {
            var checkitemParameter = checkitem != null ?
                new ObjectParameter("checkitem", checkitem) :
                new ObjectParameter("checkitem", typeof(string));
    
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("process", process) :
                new ObjectParameter("process", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCchartReport4", checkitemParameter, stageParameter, productParameter, partNoParameter, partNameParameter, processParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GET_SPCGraphData(string stage, string process, string partNo, string partName, string product, string startDate, string endDate, string checkItem, string checkItemNo)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var checkItemNoParameter = checkItemNo != null ?
                new ObjectParameter("CheckItemNo", checkItemNo) :
                new ObjectParameter("CheckItemNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCGraphData", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, startDateParameter, endDateParameter, checkItemParameter, checkItemNoParameter);
        }
    
        public virtual int GET_SPCGraphStats(string stage, string process, string partNo, string partName, string product, string startDate, string endDate, string checkItem, string checkItemNo)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var checkItemNoParameter = checkItemNo != null ?
                new ObjectParameter("CheckItemNo", checkItemNo) :
                new ObjectParameter("CheckItemNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCGraphStats", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, startDateParameter, endDateParameter, checkItemParameter, checkItemNoParameter);
        }
    
        public virtual ObjectResult<GET_SPCItemList_Result> GET_SPCItemList(string stage, string process, string partNo, string partName, string product, string startDate, string endDate)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SPCItemList_Result>("GET_SPCItemList", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GET_SPCSampleValue_Result> GET_SPCSampleValue(string stage, string process, string partNo, string partName, string product, string startDate, string endDate, string checkItem)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SPCSampleValue_Result>("GET_SPCSampleValue", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, startDateParameter, endDateParameter, checkItemParameter);
        }
    
        public virtual int GET_SPCSampleValueReport(string stage, string process, string partNo, string partName, string product, string startDate, string endDate, string checkItem)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCSampleValueReport", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, startDateParameter, endDateParameter, checkItemParameter);
        }
    
        public virtual int GET_SPCSampleValueReport2(string stage, string process, string partNo, string partName, string product, string startDate, string endDate, string checkItem)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCSampleValueReport2", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, startDateParameter, endDateParameter, checkItemParameter);
        }
    
        public virtual int GET_SPCSampleValueReport3(string stage, string process, string partNo, string partName, string product, string startDate, string endDate, string checkItem)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCSampleValueReport3", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, startDateParameter, endDateParameter, checkItemParameter);
        }
    
        public virtual int GET_SPCSampleValueReport4(string stage, string process, string partNo, string partName, string product, string startDate, string endDate, string checkItem)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCSampleValueReport4", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, startDateParameter, endDateParameter, checkItemParameter);
        }
    
        public virtual int GET_SPCStats(string stage, string process, string partNo, string partName, string product, string startDate, string endDate, string checkItem, string checkItemNo)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var checkItemNoParameter = checkItemNo != null ?
                new ObjectParameter("CheckItemNo", checkItemNo) :
                new ObjectParameter("CheckItemNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCStats", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, startDateParameter, endDateParameter, checkItemParameter, checkItemNoParameter);
        }
    
        public virtual int GET_SPCStats_2016(string stage, string process, string partNo, string partName, string product, string startDate, string endDate, string checkItem, ObjectParameter lotCount)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCStats_2016", stageParameter, processParameter, partNoParameter, partNameParameter, productParameter, startDateParameter, endDateParameter, checkItemParameter, lotCount);
        }
    
        public virtual int GET_SPCTableReport(string stage, string product, string partNo, string partName, string process, string startDate, string endDate)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("process", process) :
                new ObjectParameter("process", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCTableReport", stageParameter, productParameter, partNoParameter, partNameParameter, processParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GET_SPCTableReport_debug(string stage, string product, string partNo, string partName, string process, string startDate, string endDate)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("process", process) :
                new ObjectParameter("process", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCTableReport_debug", stageParameter, productParameter, partNoParameter, partNameParameter, processParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int GET_SPCTableReport2(string checkitem, string stage, string product, string partNo, string partName, string process, string startDate, string endDate)
        {
            var checkitemParameter = checkitem != null ?
                new ObjectParameter("checkitem", checkitem) :
                new ObjectParameter("checkitem", typeof(string));
    
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("process", process) :
                new ObjectParameter("process", typeof(string));
    
            var startDateParameter = startDate != null ?
                new ObjectParameter("startDate", startDate) :
                new ObjectParameter("startDate", typeof(string));
    
            var endDateParameter = endDate != null ?
                new ObjectParameter("endDate", endDate) :
                new ObjectParameter("endDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_SPCTableReport2", checkitemParameter, stageParameter, productParameter, partNoParameter, partNameParameter, processParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GET_SPDATAROW_Result> GET_SPDATAROW(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SPDATAROW_Result>("GET_SPDATAROW", iDParameter);
        }
    
        public virtual ObjectResult<GET_SPDATAROWDATA_Result> GET_SPDATAROWDATA(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SPDATAROWDATA_Result>("GET_SPDATAROWDATA", iDParameter);
        }
    
        public virtual ObjectResult<GET_SPROWDATA_Result> GET_SPROWDATA(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GET_SPROWDATA_Result>("GET_SPROWDATA", iDParameter);
        }
    
        public virtual int GET_Suppliers(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_Suppliers", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual ObjectResult<string> GET_Suppliersdropdown()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_Suppliersdropdown");
        }
    
        public virtual ObjectResult<string> GET_SuppliersFiltered(string process, string partNo, string partName, string product)
        {
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("PartNo", partNo) :
                new ObjectParameter("PartNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("Product", product) :
                new ObjectParameter("Product", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GET_SuppliersFiltered", processParameter, partNoParameter, partNameParameter, productParameter);
        }
    
        public virtual int GET_Terminals(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_Terminals", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual int GET_Users(string pageNumber, string rowCount, string orderBy, string filter, ObjectParameter recordCount)
        {
            var pageNumberParameter = pageNumber != null ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(string));
    
            var rowCountParameter = rowCount != null ?
                new ObjectParameter("RowCount", rowCount) :
                new ObjectParameter("RowCount", typeof(string));
    
            var orderByParameter = orderBy != null ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(string));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_Users", pageNumberParameter, rowCountParameter, orderByParameter, filterParameter, recordCount);
        }
    
        public virtual int GET_UsersEmail(string columnName)
        {
            var columnNameParameter = columnName != null ?
                new ObjectParameter("ColumnName", columnName) :
                new ObjectParameter("ColumnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GET_UsersEmail", columnNameParameter);
        }
    
        public virtual ObjectResult<GetNCCheckitems_Result> GetNCCheckitems(string lotNo, string sAPCode, string type)
        {
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("LotNo", lotNo) :
                new ObjectParameter("LotNo", typeof(string));
    
            var sAPCodeParameter = sAPCode != null ?
                new ObjectParameter("SAPCode", sAPCode) :
                new ObjectParameter("SAPCode", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNCCheckitems_Result>("GetNCCheckitems", lotNoParameter, sAPCodeParameter, typeParameter);
        }
    
        public virtual int INSERT_RDailyCpk(Nullable<System.DateTime> day)
        {
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_RDailyCpk", dayParameter);
        }
    
        public virtual int INSERT_RMonthlyCpk(Nullable<int> year, Nullable<int> month)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_RMonthlyCpk", yearParameter, monthParameter);
        }
    
        public virtual int INSERT_RWeeklyCpk(Nullable<int> year, Nullable<int> month, Nullable<int> week)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var weekParameter = week.HasValue ?
                new ObjectParameter("Week", week) :
                new ObjectParameter("Week", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_RWeeklyCpk", yearParameter, monthParameter, weekParameter);
        }
    
        public virtual int INSERT_RYearlyCpk(Nullable<int> year)
        {
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("INSERT_RYearlyCpk", yearParameter);
        }
    
        public virtual int InsertUpdate_Image(string imageurl, string filename)
        {
            var imageurlParameter = imageurl != null ?
                new ObjectParameter("imageurl", imageurl) :
                new ObjectParameter("imageurl", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUpdate_Image", imageurlParameter, filenameParameter);
        }
    
        public virtual int InsertUpdate_ImageSAC(string imageurl, string filename, string saccode)
        {
            var imageurlParameter = imageurl != null ?
                new ObjectParameter("imageurl", imageurl) :
                new ObjectParameter("imageurl", typeof(string));
    
            var filenameParameter = filename != null ?
                new ObjectParameter("filename", filename) :
                new ObjectParameter("filename", typeof(string));
    
            var saccodeParameter = saccode != null ?
                new ObjectParameter("saccode", saccode) :
                new ObjectParameter("saccode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertUpdate_ImageSAC", imageurlParameter, filenameParameter, saccodeParameter);
        }
    
        public virtual int RECALC_DailyCpkValuesSp(string stage, string process, string model, string partName, string productCode, string checkItem, string period)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var periodParameter = period != null ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RECALC_DailyCpkValuesSp", stageParameter, processParameter, modelParameter, partNameParameter, productCodeParameter, checkItemParameter, periodParameter);
        }
    
        public virtual int RECALC_MonthlyCpkValuesSp(string stage, string process, string model, string partName, string productCode, string checkItem, Nullable<int> year, Nullable<int> month)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RECALC_MonthlyCpkValuesSp", stageParameter, processParameter, modelParameter, partNameParameter, productCodeParameter, checkItemParameter, yearParameter, monthParameter);
        }
    
        public virtual int RECALC_WeeklyCpkValuesSp(string stage, string process, string model, string partName, string productCode, string checkItem, Nullable<int> year, Nullable<int> month, Nullable<int> week)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var weekParameter = week.HasValue ?
                new ObjectParameter("Week", week) :
                new ObjectParameter("Week", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RECALC_WeeklyCpkValuesSp", stageParameter, processParameter, modelParameter, partNameParameter, productCodeParameter, checkItemParameter, yearParameter, monthParameter, weekParameter);
        }
    
        public virtual int RECALC_YearlyCpkValuesSp(string stage, string process, string model, string partName, string productCode, string checkItem, Nullable<int> year)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("Stage", stage) :
                new ObjectParameter("Stage", typeof(string));
    
            var processParameter = process != null ?
                new ObjectParameter("Process", process) :
                new ObjectParameter("Process", typeof(string));
    
            var modelParameter = model != null ?
                new ObjectParameter("Model", model) :
                new ObjectParameter("Model", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("PartName", partName) :
                new ObjectParameter("PartName", typeof(string));
    
            var productCodeParameter = productCode != null ?
                new ObjectParameter("ProductCode", productCode) :
                new ObjectParameter("ProductCode", typeof(string));
    
            var checkItemParameter = checkItem != null ?
                new ObjectParameter("CheckItem", checkItem) :
                new ObjectParameter("CheckItem", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RECALC_YearlyCpkValuesSp", stageParameter, processParameter, modelParameter, partNameParameter, productCodeParameter, checkItemParameter, yearParameter);
        }
    
        public virtual int SAC_AccumulatedMetAgreedQuantity(string sACRefNo)
        {
            var sACRefNoParameter = sACRefNo != null ?
                new ObjectParameter("SACRefNo", sACRefNo) :
                new ObjectParameter("SACRefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SAC_AccumulatedMetAgreedQuantity", sACRefNoParameter);
        }
    
        public virtual ObjectResult<string> SAC_AprrovedRecalcJudgement(string sACRefNo)
        {
            var sACRefNoParameter = sACRefNo != null ?
                new ObjectParameter("SACRefNo", sACRefNo) :
                new ObjectParameter("SACRefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SAC_AprrovedRecalcJudgement", sACRefNoParameter);
        }
    
        public virtual int SAC_ExpiredSACRequests()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SAC_ExpiredSACRequests");
        }
    
        public virtual int SACApproved_EmailNotif(string refNo, string recipients)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SACApproved_EmailNotif", refNoParameter, recipientsParameter);
        }
    
        public virtual int SACforReview_Approval(string lotNo, string sAPCode, Nullable<int> qty, string mCSID, string recipients, string sACReqStatus)
        {
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("LotNo", lotNo) :
                new ObjectParameter("LotNo", typeof(string));
    
            var sAPCodeParameter = sAPCode != null ?
                new ObjectParameter("SAPCode", sAPCode) :
                new ObjectParameter("SAPCode", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            var recipientsParameter = recipients != null ?
                new ObjectParameter("Recipients", recipients) :
                new ObjectParameter("Recipients", typeof(string));
    
            var sACReqStatusParameter = sACReqStatus != null ?
                new ObjectParameter("SACReqStatus", sACReqStatus) :
                new ObjectParameter("SACReqStatus", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SACforReview_Approval", lotNoParameter, sAPCodeParameter, qtyParameter, mCSIDParameter, recipientsParameter, sACReqStatusParameter);
        }
    
        public virtual ObjectResult<SACLotList_Result> SACLotList(string refNo)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SACLotList_Result>("SACLotList", refNoParameter);
        }
    
        public virtual ObjectResult<Select_Image_Result> Select_Image()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Image_Result>("Select_Image");
        }
    
        public virtual int SendEmail_HTML(string serverAddr, string from, string to, string subject, string bodytext, string user, string password, Nullable<int> sSLConnection, Nullable<int> serverPort, ObjectParameter resultMsg)
        {
            var serverAddrParameter = serverAddr != null ?
                new ObjectParameter("ServerAddr", serverAddr) :
                new ObjectParameter("ServerAddr", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodytextParameter = bodytext != null ?
                new ObjectParameter("Bodytext", bodytext) :
                new ObjectParameter("Bodytext", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sSLConnectionParameter = sSLConnection.HasValue ?
                new ObjectParameter("SSLConnection", sSLConnection) :
                new ObjectParameter("SSLConnection", typeof(int));
    
            var serverPortParameter = serverPort.HasValue ?
                new ObjectParameter("ServerPort", serverPort) :
                new ObjectParameter("ServerPort", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmail_HTML", serverAddrParameter, fromParameter, toParameter, subjectParameter, bodytextParameter, userParameter, passwordParameter, sSLConnectionParameter, serverPortParameter, resultMsg);
        }
    
        public virtual int SendEmail_HTML_forNCJudgement(string serverAddr, string from, string to, string subject, string bodytext, string user, string password, Nullable<int> sSLConnection, Nullable<int> serverPort, ObjectParameter resultMsg, string sQLQuery)
        {
            var serverAddrParameter = serverAddr != null ?
                new ObjectParameter("ServerAddr", serverAddr) :
                new ObjectParameter("ServerAddr", typeof(string));
    
            var fromParameter = from != null ?
                new ObjectParameter("From", from) :
                new ObjectParameter("From", typeof(string));
    
            var toParameter = to != null ?
                new ObjectParameter("To", to) :
                new ObjectParameter("To", typeof(string));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodytextParameter = bodytext != null ?
                new ObjectParameter("Bodytext", bodytext) :
                new ObjectParameter("Bodytext", typeof(string));
    
            var userParameter = user != null ?
                new ObjectParameter("User", user) :
                new ObjectParameter("User", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var sSLConnectionParameter = sSLConnection.HasValue ?
                new ObjectParameter("SSLConnection", sSLConnection) :
                new ObjectParameter("SSLConnection", typeof(int));
    
            var serverPortParameter = serverPort.HasValue ?
                new ObjectParameter("ServerPort", serverPort) :
                new ObjectParameter("ServerPort", typeof(int));
    
            var sQLQueryParameter = sQLQuery != null ?
                new ObjectParameter("SQLQuery", sQLQuery) :
                new ObjectParameter("SQLQuery", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SendEmail_HTML_forNCJudgement", serverAddrParameter, fromParameter, toParameter, subjectParameter, bodytextParameter, userParameter, passwordParameter, sSLConnectionParameter, serverPortParameter, resultMsg, sQLQueryParameter);
        }
    
        public virtual int setStartEndDate(Nullable<System.DateTime> day, ObjectParameter startDate, ObjectParameter endDate)
        {
            var dayParameter = day.HasValue ?
                new ObjectParameter("Day", day) :
                new ObjectParameter("Day", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("setStartEndDate", dayParameter, startDate, endDate);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual ObjectResult<TotalNCAC_Result> TotalNCAC(string stage, string partNo, string partName, string supplier, string product, string monthFrom, string yearFrom, string monthTo, string yearTo, string lotNo, string drillDownCondition)
        {
            var stageParameter = stage != null ?
                new ObjectParameter("stage", stage) :
                new ObjectParameter("stage", typeof(string));
    
            var partNoParameter = partNo != null ?
                new ObjectParameter("partNo", partNo) :
                new ObjectParameter("partNo", typeof(string));
    
            var partNameParameter = partName != null ?
                new ObjectParameter("partName", partName) :
                new ObjectParameter("partName", typeof(string));
    
            var supplierParameter = supplier != null ?
                new ObjectParameter("supplier", supplier) :
                new ObjectParameter("supplier", typeof(string));
    
            var productParameter = product != null ?
                new ObjectParameter("product", product) :
                new ObjectParameter("product", typeof(string));
    
            var monthFromParameter = monthFrom != null ?
                new ObjectParameter("monthFrom", monthFrom) :
                new ObjectParameter("monthFrom", typeof(string));
    
            var yearFromParameter = yearFrom != null ?
                new ObjectParameter("yearFrom", yearFrom) :
                new ObjectParameter("yearFrom", typeof(string));
    
            var monthToParameter = monthTo != null ?
                new ObjectParameter("monthTo", monthTo) :
                new ObjectParameter("monthTo", typeof(string));
    
            var yearToParameter = yearTo != null ?
                new ObjectParameter("yearTo", yearTo) :
                new ObjectParameter("yearTo", typeof(string));
    
            var lotNoParameter = lotNo != null ?
                new ObjectParameter("lotNo", lotNo) :
                new ObjectParameter("lotNo", typeof(string));
    
            var drillDownConditionParameter = drillDownCondition != null ?
                new ObjectParameter("drillDownCondition", drillDownCondition) :
                new ObjectParameter("drillDownCondition", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TotalNCAC_Result>("TotalNCAC", stageParameter, partNoParameter, partNameParameter, supplierParameter, productParameter, monthFromParameter, yearFromParameter, monthToParameter, yearToParameter, lotNoParameter, drillDownConditionParameter);
        }
    
        public virtual ObjectResult<Update_mcsDetails_Result> Update_mcsDetails(string iD, string btnevent, string pcode, string userid)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var btneventParameter = btnevent != null ?
                new ObjectParameter("btnevent", btnevent) :
                new ObjectParameter("btnevent", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(string));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Update_mcsDetails_Result>("Update_mcsDetails", iDParameter, btneventParameter, pcodeParameter, useridParameter);
        }
    
        public virtual int Update_mcsImageDetails(string mCSID, string mCSSPID, string image, string pcode, string userid)
        {
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            var mCSSPIDParameter = mCSSPID != null ?
                new ObjectParameter("MCSSPID", mCSSPID) :
                new ObjectParameter("MCSSPID", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(string));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_mcsImageDetails", mCSIDParameter, mCSSPIDParameter, imageParameter, pcodeParameter, useridParameter);
        }
    
        public virtual int Update_mcsImageFGDetails(string mCSID, string mCSFGID, string image, string pcode, string userid)
        {
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            var mCSFGIDParameter = mCSFGID != null ?
                new ObjectParameter("MCSFGID", mCSFGID) :
                new ObjectParameter("MCSFGID", typeof(string));
    
            var imageParameter = image != null ?
                new ObjectParameter("Image", image) :
                new ObjectParameter("Image", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(string));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_mcsImageFGDetails", mCSIDParameter, mCSFGIDParameter, imageParameter, pcodeParameter, useridParameter);
        }
    
        public virtual int Update_mcslogsDetails(string iD, string mCSID, string mCSDETAILID, string etable, string btnevent, string pcode, string userid, string rremarks, string newID)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var mCSIDParameter = mCSID != null ?
                new ObjectParameter("MCSID", mCSID) :
                new ObjectParameter("MCSID", typeof(string));
    
            var mCSDETAILIDParameter = mCSDETAILID != null ?
                new ObjectParameter("MCSDETAILID", mCSDETAILID) :
                new ObjectParameter("MCSDETAILID", typeof(string));
    
            var etableParameter = etable != null ?
                new ObjectParameter("etable", etable) :
                new ObjectParameter("etable", typeof(string));
    
            var btneventParameter = btnevent != null ?
                new ObjectParameter("btnevent", btnevent) :
                new ObjectParameter("btnevent", typeof(string));
    
            var pcodeParameter = pcode != null ?
                new ObjectParameter("Pcode", pcode) :
                new ObjectParameter("Pcode", typeof(string));
    
            var useridParameter = userid != null ?
                new ObjectParameter("userid", userid) :
                new ObjectParameter("userid", typeof(string));
    
            var rremarksParameter = rremarks != null ?
                new ObjectParameter("rremarks", rremarks) :
                new ObjectParameter("rremarks", typeof(string));
    
            var newIDParameter = newID != null ?
                new ObjectParameter("newID", newID) :
                new ObjectParameter("newID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_mcslogsDetails", iDParameter, mCSIDParameter, mCSDETAILIDParameter, etableParameter, btneventParameter, pcodeParameter, useridParameter, rremarksParameter, newIDParameter);
        }
    
        public virtual int UpdateSACAccumulateQTY(string refNo, string mCSChildID, Nullable<int> qty)
        {
            var refNoParameter = refNo != null ?
                new ObjectParameter("RefNo", refNo) :
                new ObjectParameter("RefNo", typeof(string));
    
            var mCSChildIDParameter = mCSChildID != null ?
                new ObjectParameter("MCSChildID", mCSChildID) :
                new ObjectParameter("MCSChildID", typeof(string));
    
            var qtyParameter = qty.HasValue ?
                new ObjectParameter("Qty", qty) :
                new ObjectParameter("Qty", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSACAccumulateQTY", refNoParameter, mCSChildIDParameter, qtyParameter);
        }
    }
}
